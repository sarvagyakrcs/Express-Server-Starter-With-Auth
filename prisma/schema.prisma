// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model VerificationToken {
  id String @id @default(cuid())
  email String 
  token      String @unique
  expires    DateTime
 
  @@unique([email, token])
}

model PasswordResetToken {
  id String @id @default(cuid())
  email String 
  token      String @unique
  expires    DateTime
 
  @@unique([email, token])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

enum UserRole{
  ADMIN
  USER
}

model User {
  id            String    @id @default(cuid())
  user_name      String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  password      String?
  role UserRole @default(USER)
  current_files      Files[]
  sessions      Session[]

  @@map("users")
}

model Files {
  id        Int     @id @default(autoincrement())
  path     String @unique
  deleted Boolean @default(false)
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?
}